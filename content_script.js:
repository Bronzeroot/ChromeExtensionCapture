chrome.runtime.onMessage.addListener(async (message, sender, sendResponse) => {
    if (message === "takeScreenshot") {
        // Wait for the slides to load
        await new Promise(resolve => setTimeout(resolve, 5000));

        // Find the number of slides
        const numSlides = document.querySelectorAll('.punch-filmstrip-thumbnail').length;

        // Set the width and height of the browser window
        const width = Math.max(document.body.scrollWidth, document.body.offsetWidth, document.documentElement.clientWidth, document.documentElement.scrollWidth, document.documentElement.offsetWidth);
        const height = Math.max(document.body.scrollHeight, document.body.offsetHeight, document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight);
        window.resizeTo(width, height);

        // Loop through each slide and take a screenshot
        for (let i = 1; i <= numSlides; i++) {
            // Scroll to the slide
            document.querySelector(`#punch-slide-thumbnail-${i}`).scrollIntoView();
            await new Promise(resolve => setTimeout(resolve, 1000));
            // Take a screenshot of the slide
            chrome.runtime.sendMessage({type: "screenshot", data: await takeScreenshot()});
        }

        // Send a message to the background script to indicate that the screenshots have been taken
        chrome.runtime.sendMessage({type: "screenshotsTaken"});
    }
});

async function takeScreenshot() {
    const dataUrl = await new Promise(resolve => chrome.tabs.captureVisibleTab(null, {format: "png"}, resolve));
    return dataUrl;
}
